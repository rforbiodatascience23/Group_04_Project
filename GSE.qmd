---
title: "GSE_dataset"
format: html
editor: visual
---

# GSE39833 Data dwonload

## Libraries

```{r}
#| echo: true
#| eval: true

library(GEOquery)
library(tidyverse)
```

## Loading data

```{r}
#| echo: false
#| eval: true
#| message: false

gse <- getGEO('GSE39833', GSEMatrix = FALSE)
```

## Making a list GSM lists

```{r}
#| echo: true
#| eval: true
gsmlist = (GSMList(gse))
```

## Extract probe IDs from the platform data

```{r}
#| echo: true
#| eval: true
probesets <- Table(GPLList(gse)[[1]])$ID
```

## Create a matrix with expression values

```{r}
#| echo: false
#| eval: true
data_matrix <- do.call('cbind', lapply(gsmlist, function(x) {
  tab <- Table(x)
  mymatch <- match(probesets, tab$ID_REF)
  return(tab$VALUE[mymatch])
}))
data_matrix <- apply(data_matrix, 2, function(x) {as.numeric(as.character(x))})
```

## Creating log2 matrix

```{r}
#| echo: false
#| eval: true
log2_matrix <- log2(data_matrix)
```

## Creating Expression Set For standard dataset

```{r}
#| echo: false
#| eval: true

# Load the Biobase package
require(Biobase)

# Set row and column names for the data matrix
rownames(data_matrix) <- probesets
colnames(data_matrix) <- names(gsmlist)

# Create a sample metadata dataframe
pdata <- data.frame(samples = names(gsmlist))
rownames(pdata) <- names(gsmlist)

# Create an AnnotatedDataFrame for sample metadata
pheno <- as(pdata, "AnnotatedDataFrame")

# Create an ExpressionSet object with the processed data
eset <- new('ExpressionSet', exprs = data_matrix, phenoData = pheno)

# Display the resulting ExpressionSet
eset
```

## Creating Expression Set For log2 dataset

```{r}
#| echo: false
#| eval: true

# Load the Biobase package
require(Biobase)

# Set row and column names for the data matrix
rownames(log2_matrix) <- probesets
colnames(log2_matrix) <- names(gsmlist)

# Create a sample metadata dataframe
pdata <- data.frame(samples = names(gsmlist))
rownames(pdata) <- names(gsmlist)

# Create an AnnotatedDataFrame for sample metadata
pheno <- as(pdata, "AnnotatedDataFrame")

# Create an ExpressionSet object with the processed data
log2_eset <- new('ExpressionSet', exprs = log2_matrix, phenoData = pheno)

# Display the resulting ExpressionSet
log2_eset
```

## Deletion of intermediate files

```{r}
#| echo: false
#| eval: true

remove(gsmlist)
remove(pdata)
remove(pheno)
remove(probesets)
```

## Citation

```{r}
citation("GEOquery")
```
